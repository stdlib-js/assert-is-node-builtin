// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
function t(t){if(t.__esModule)return t;var r=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(t).forEach((function(e){var n=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(r,e,n.get?n:{enumerable:!0,get:function(){return t[e]}})})),r}var r=t(Object.freeze({__proto__:null,default:{}})),e=Math.floor;var n=function(t){return e(t)===t},o=n;var i=function(t){return"object"==typeof t&&null!==t&&"number"==typeof t.length&&o(t.length)&&t.length>=0&&t.length<=9007199254740991},a="function"==typeof Object.defineProperty?Object.defineProperty:null;var u=function(){try{return a({},"x",{}),!0}catch(t){return!1}},l=Object.defineProperty,c=Object.prototype,s=c.toString,f=c.__defineGetter__,p=c.__defineSetter__,v=c.__lookupGetter__,_=c.__lookupSetter__;var m=l,b=function(t,r,e){var n,o,i,a;if("object"!=typeof t||null===t||"[object Array]"===s.call(t))throw new TypeError("invalid argument. First argument must be an object. Value: `"+t+"`.");if("object"!=typeof e||null===e||"[object Array]"===s.call(e))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+e+"`.");if((o="value"in e)&&(v.call(t,r)||_.call(t,r)?(n=t.__proto__,t.__proto__=c,delete t[r],t[r]=e.value,t.__proto__=n):t[r]=e.value),i="get"in e,a="set"in e,o&&(i||a))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return i&&f&&f.call(t,r,e.get),a&&p&&p.call(t,r,e.set),t},y=u()?m:b;var g=function(t,r,e){y(t,r,{configurable:!1,enumerable:!1,writable:!1,value:e})};var d=function(t){return"number"==typeof t};var h=function(){return"function"==typeof Symbol&&"symbol"==typeof Symbol("foo")}();var j=function(){return h&&"symbol"==typeof Symbol.toStringTag},O=Object.prototype.toString,w=O;var P=function(t){return w.call(t)},S=Object.prototype.hasOwnProperty;var T=function(t,r){return null!=t&&S.call(t,r)},E="function"==typeof Symbol?Symbol.toStringTag:"",I=T,k=E,N=O;var V=P,M=function(t){var r,e,n;if(null==t)return N.call(t);e=t[k],r=I(t,k);try{t[k]=void 0}catch(r){return N.call(t)}return n=N.call(t),r?t[k]=e:delete t[k],n},x=j()?M:V,F=Number,A=F.prototype.toString;var G=x,z=F,Y=function(t){try{return A.call(t),!0}catch(t){return!1}},q=j();var C=function(t){return"object"==typeof t&&(t instanceof z||(q?Y(t):"[object Number]"===G(t)))},D=d,B=C;var H=g,J=function(t){return D(t)||B(t)},K=C;H(J,"isPrimitive",d),H(J,"isObject",K);var L=J,Q=Number.POSITIVE_INFINITY,R=F.NEGATIVE_INFINITY,U=Q,W=R,X=n;var Z=function(t){return t<U&&t>W&&X(t)},$=L.isPrimitive,tt=Z;var rt=function(t){return $(t)&&tt(t)},et=L.isObject,nt=Z;var ot=function(t){return et(t)&&nt(t.valueOf())},it=rt,at=ot;var ut=g,lt=function(t){return it(t)||at(t)},ct=ot;ut(lt,"isPrimitive",rt),ut(lt,"isObject",ct);var st=lt;var ft=function(t){return"string"==typeof t},pt=String.prototype.valueOf;var vt=x,_t=function(t){try{return pt.call(t),!0}catch(t){return!1}},mt=j();var bt=function(t){return"object"==typeof t&&(t instanceof String||(mt?_t(t):"[object String]"===vt(t)))},yt=ft,gt=bt;var dt=g,ht=function(t){return yt(t)||gt(t)},jt=bt;dt(ht,"isPrimitive",ft),dt(ht,"isObject",jt);var Ot=ht;var wt=function(t){return t!=t},Pt=L.isPrimitive,St=wt;var Tt=function(t){return Pt(t)&&St(t)},Et=L.isObject,It=wt;var kt=function(t){return Et(t)&&It(t.valueOf())},Nt=Tt,Vt=kt;var Mt=g,xt=function(t){return Nt(t)||Vt(t)},Ft=kt;Mt(xt,"isPrimitive",Tt),Mt(xt,"isObject",Ft);var At=i,Gt=st.isPrimitive,zt=Ot.isPrimitive,Yt=xt.isPrimitive;var qt=function(t,r,e){var n,o,i;if(!At(t)&&!zt(t))throw new TypeError("invalid argument. First argument must be array-like. Value: `"+t+"`.");if(arguments.length<2)throw new Error("insufficient input arguments. Must provide a search value.");if(arguments.length>2){if(!Gt(e))throw new TypeError("invalid argument. Third argument must be an integer. Value: `"+e+"`.");(o=e)<0&&(o=0)}else o=0;if(zt(t)){if(!zt(r))throw new TypeError("invalid argument. Second argument must be a string primitive. Value: `"+r+"`.");return-1!==t.indexOf(r,o)}if(n=t.length,Yt(r)){for(i=o;i<n;i++)if(Yt(t[i]))return!0;return!1}for(i=o;i<n;i++)if(t[i]===r)return!0;return!1},Ct=Ot.isPrimitive,Dt=["assert","async_hooks","buffer","child_process","cluster","console","constants","crypto","dgram","dns","domain","events","fs","http","http2","https","_http_agent","_http_client","_http_common","_http_incoming","_http_outgoing","_http_server","inspector","module","net","os","path","perf_hooks","process","punycode","querystring","readline","repl","stream","_stream_readable","_stream_writable","_stream_duplex","_stream_transform","_stream_passthrough","_stream_wrap","string_decoder","sys","timers","tls","_tls_common","_tls_legacy","_tls_wrap","tty","url","util","v8","vm","zlib","v8/tools/splaytree","v8/tools/codemap","v8/tools/consarray","v8/tools/csvparser","v8/tools/profile","v8/tools/profile_view","v8/tools/logreader","v8/tools/tickprocessor","v8/tools/SourceMap","v8/tools/tickprocessor-driver","node-inspect/lib/_inspect","node-inspect/lib/internal/inspect_client","node-inspect/lib/internal/inspect_repl"],Bt=r.builtinModules||Dt;var Ht=function(t){return!!Ct(t)&&qt(Bt,t)};export{Ht as default};
//# sourceMappingURL=mod.js.map
